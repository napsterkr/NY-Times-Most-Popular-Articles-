apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.nytsample"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    buildFeatures {

        dataBinding true

        // for view binding:
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}
dependencies {
    implementation project(':data')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    /* Circle Image view library  */
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    /* Glide lib for image loading  */
    implementation 'com.github.bumptech.glide:glide:' + glide_version
    kapt 'com.github.bumptech.glide:compiler:' + glide_version




    // android architecture component
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    /* Android Architecture Component - Room Persistance Lib  */
    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "androidx.room:room-common:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_Logging_Version"
    implementation "com.squareup.okio:okio:$okio_version"

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:3.1.1'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:3.1.1'
    kapt 'com.android.databinding:compiler:3.1.4'
// Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltAndroidXVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

    // Hilt testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"
    // Test Dependencies
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    // Unit tests
    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "io.kotlintest:kotlintest:$kotlin_test_version"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock_version"
    testImplementation "org.powermock:powermock-core:$powermock_version"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_webserver_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
// Testing
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.3.0'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation "org.robolectric:robolectric:4.3.1"


}